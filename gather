#!/bin/bash
# Author: Shree Raj Shrestha
# Date: 02/20/2025
set -ueox pipefail
source "./.husk"
source "${HUSK_HOME}/rake" "${1}" "${2}"
EPHEMERAL="${HOME}/.ephemeral/${RANDOM}"
mkdir -p "${EPHEMERAL}"

function isChecksumValid() {
    MATCH_CHECKSUM="${2}"
    FILE_CHECKSUM=$(sha256sum "${1}"| cut -d " " -f 1)
    if [[ $FILE_CHECKSUM == $MATCH_CHECKSUM ]]; then 
        return 0
    else
        return 1
    fi
}

function getSeed() {
    NEEDS=""
    THIS_SEED="$(echo "${1}" | cut -d "_" -f 1)"
    source "${HUSK_HOME}/silo/seeds/$(echo "${1}" | cut -d "_" -f 1)/$(echo "${1}" | cut -d "_" -f 3).recipe"
    if [[ ! -z "${NEEDS}" ]]; then
        for NEED in "${NEEDS[@]}"
        do
            if [[ ! "${COB_RESOLVED}" =~ ${NEED} ]]; then
                getSeed "${NEED}"
            fi
        done
    fi

    source "${HUSK_HOME}/silo/seeds/$(echo "${1}" | cut -d "_" -f 1)/$(echo "${1}" | cut -d "_" -f 2).seed"
    cd "${HUSK_HOME}/silo/seeds/$(echo "${1}" | cut -d "_" -f 1)"

    ARCHIVE=$(echo "${URL##*/}")
    if [[ "${URL}" =~ .*.git$ ]]; then
        REPO_BASE=$(basename "${URL}")
        REPO="${REPO_BASE%.*}"
        ARCHIVE_SEED=true
        THIS_SEED_HOME="$(pwd)"
        if [[ -e "${HUSK_HOME}/silo/seeds/$(echo "${1}" | cut -d "_" -f 1)/${ARCHIVE}" ]]; then
            "$(which tar)" -xzf "${REPO}.git" -C "${EPHEMERAL}"
            cd "${EPHEMERAL}/${REPO}"
            if [ $("$(which git)" rev-parse HEAD) == "${COMMIT}" ]; then
                echo "Seed is already cached, skipping download"
                cd ..
                rm -rf "${REPO}"
                ARCHIVE_SEED=false
            fi
            cd "${THIS_SEED_HOME}"
        fi
        if "${ARCHIVE_SEED}"; then 
            "$(which git)" clone "${URL}" "${EPHEMERAL}/${REPO}"
            cd "${EPHEMERAL}/${REPO}"
            "$(which git)" reset --hard "${COMMIT}"
            "$(which git)" submodule update --init --recursive
            cd ..
            "$(which tar)" czf "${THIS_SEED_HOME}/${REPO}.git" "${REPO}"
            cd "${THIS_SEED_HOME}"
        fi
    else
        CACHED_SEED="${HUSK_HOME}/silo/seeds/$(echo "${1}" | cut -d "_" -f 1)/${ARCHIVE}"
        if [[ -e "${CACHED_SEED}" ]] && $(isChecksumValid "${CACHED_SEED}" "${CHECKSUM}"); then
            echo "Seed is already cached, skipping download"
        else
            curl -LO "${URL}"
            if ! $(isChecksumValid "${CACHED_SEED}" "${CHECKSUM}"); then
                exit 1
            fi
        fi
    fi

    cd "${HUSK_HOME}"
    source "${HUSK_HOME}/silo/seeds/$(echo "${1}" | cut -d "_" -f 1)/.${WHICH_SOIL}" 
    for REQUIREMENT in "${REQUIREMENTS[@]}"
    do
        if [[ "${REQUIREMENT}" =~ .*:.* ]]; then
            REQUIREMENT=$(echo "${REQUIREMENT}" |  cut -d ":" -f 1)
        fi
        if [[ ! "${SOIL_REQUIREMENTS}" =~ "${REQUIREMENT}" ]]; then
            if [[ -z "${SOIL_REQUIREMENTS}" ]]; then
                SOIL_REQUIREMENTS="${REQUIREMENT}"
            else
                SOIL_REQUIREMENTS="${SOIL_REQUIREMENTS} ${REQUIREMENT}"
            fi
        fi
    done
    if [[ ! "${COB_RESOLVED}" =~ ${1} ]]; then
        if [[ ! -z "${COB_RESOLVED}" ]]; then
            COB_RESOLVED="${COB_RESOLVED} ${1}"
        else
            COB_RESOLVED="${1}"
        fi
    fi
}

source "${HUSK_HOME}/${RAKE_PATH}.husk"
COB_RESOLVED=""
SOIL_REQUIREMENTS="which bash zip tar"
for SEED in "${COB[@]}"
do
    getSeed "${SEED}"
done

rm -rf "${HUSK_HOME}/${RAKE_PATH}"
touch "${HUSK_HOME}/${RAKE_PATH}"
printf "COB=(${COB_RESOLVED[@]})" >> "${HUSK_HOME}/${RAKE_PATH}"

rm -rf "${HUSK_HOME}/$(dirname ${RAKE_PATH})/.${WHICH_SOIL}"
touch "${HUSK_HOME}/$(dirname ${RAKE_PATH})/.${WHICH_SOIL}"
printf "SOIL_REQUIREMENTS=\"${SOIL_REQUIREMENTS}\"" >> "${HUSK_HOME}/$(dirname ${RAKE_PATH})/.${WHICH_SOIL}"
rm -rf "${EPHEMERAL}"
