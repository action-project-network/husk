#!/bin/sh
# Author: Shree Raj Shrestha
# Date: 01/28/2025
set -ueox pipefail
source ./rake "${1}"

function getSeed() {
    NEEDS=()
    WHICH_SEED="$(echo "${1}" | cut -d "_" -f 1)"
    source "${HUSK_HOME}/silo/seeds/$(echo "${1}" | cut -d "_" -f 1)/$(echo "${1}" | cut -d "_" -f 3).recipe" 
    for NEED in "${NEEDS[@]}"
    do
        if [[ ! ${COB_RESOLVED[@]} =~ ${NEED} ]]; then
            getSeed "${NEED}"
        fi
    done

    source "${HUSK_HOME}/silo/seeds/$(echo "${1}" | cut -d "_" -f 1)/$(echo "${1}" | cut -d "_" -f 2).seed"
    cd "${HUSK_HOME}/silo/seeds/$(echo "${1}" | cut -d "_" -f 1)"

    ARCHIVE=$(echo "${URL##*/}")
    if [ -e "${HUSK_HOME}/silo/seeds/$(echo "${1}" | cut -d "_" -f 1)/${ARCHIVE}" ] \
        && $(echo "${CHECKSUM} $(echo "${URL##*/}")" | sha256sum --check --status); then

        echo "Seed is already cached, skipping download"
    else
        curl -LO "https://${URL}"
        echo "${CHECKSUM} $(echo "${URL##*/}")" | sha256sum --check --status
    fi
    cd "${HUSK_HOME}"
    for DEPENDENCY in "${DEPENDENCIES[@]}"
    do
        if [[ $DEPENDENCY =~ .*:.* ]]; then
            DEPENDENCY=$(echo "${DEPENDENCY}" |  cut -d ":" -f 1)
        fi
        if [[ ! $REQUIREMENTS =~ "${DEPENDENCY}" ]]; then
            REQUIREMENTS=$REQUIREMENTS" "$DEPENDENCY
        fi
    done
    if [[ ! ${COB_RESOLVED[@]} =~ ${1} ]]; then
        COB_RESOLVED+=($1)
    fi
}

THIS_COB="${HUSK_HOME}/silo/cobs/${COB_PATH}.cob"
source "${THIS_COB}"
COB_RESOLVED=()
for SEED in "${COB[@]}"
do
    getSeed "${SEED}"
done
sed -i '/COB/d' "${THIS_COB}"
sed -i '/REQUIREMENTS/d' "${THIS_COB}"
echo "COB=(${COB_RESOLVED[@]})" >> "${THIS_COB}"
printf "\nREQUIREMENTS=\"${REQUIREMENTS}\"" >> "${THIS_COB}"
sed -i '/^[[:space:]]*$/d' "${THIS_COB}"
